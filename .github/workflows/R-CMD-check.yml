on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}        
          - {os: macos-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}   
          - {os: ubuntu-latest,   r: 'oldrel-2'} 
          - {os: ubuntu-latest,   r: 'oldrel-3'} 
          - {os: ubuntu-20.04,   r: '3.5',     rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}



    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.PAT }}
      TINYTEST_CI: "yes"      
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          
      - name: Installation and compilation configuration test
        run: |
          Rscript -e "install.packages('remotes');remotes::install_local(force = TRUE)"

      - uses: r-lib/actions/check-r-package@v2
        with:
          args: 'c("--no-manual", "--as-cran", "--run-donttest")'
          upload-snapshots: true
          error-on: '"error"' 
          
      - name: Speed
        run: |
          Rscript -e "install.packages('remotes');remotes::install_local(force = TRUE)"
          Rscript -e "audio.whisper::whisper_benchmark(audio.whisper::whisper('tiny'))"
          
  macOS-latest:
    runs-on: ${{ matrix.config.os }}

    name: "macos-latest-accelerate-metal"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.PAT }}
      TINYTEST_CI: "yes"  
      WHISPER_ACCELERATE: "1"
      WHISPER_METAL: "1"
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          
      - name: Installation and compilation configuration test
        run: |
          Rscript -e "install.packages('remotes');remotes::install_local(force = TRUE)"

      - uses: r-lib/actions/check-r-package@v2
        with:
          args: 'c("--no-manual", "--as-cran", "--run-donttest")'
          upload-snapshots: true
          error-on: '"error"' 
          
      - name: Speed
        run: |
          Rscript -e "install.packages('remotes');remotes::install_local(force = TRUE)"
          Rscript -e "audio.whisper::whisper_benchmark(audio.whisper::whisper('tiny', use_gpu = TRUE))"